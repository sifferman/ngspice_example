name: Demonstrate WASM Shared Library

on:
  push:
    branches:
      - wasm
  pull_request:
  workflow_dispatch:
permissions:
  contents: write
jobs:
  demonstrate-wasm-shared-library:
    env:
      tools: ${{ github.workspace }}/tools
      git: ${{ github.workspace }}/git
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Create build dirs
        run: |
          mkdir -p ${{ env.tools }}
          mkdir -p ${{ env.git }}

      - name: Install Emscripten
        run: |
          git clone https://github.com/emscripten-core/emsdk.git ${{ env.git }}/emsdk
          cd ${{ env.git }}/emsdk
          ./emsdk install latest
          ./emsdk activate latest
          source ./emsdk_env.sh

      - name: Download Ngspice WASM from Pyodide
        run: |
          wget https://github.com/pyodide/pyodide-recipes/releases/download/20250606/packages.tar.gz
          mkdir -p pyodide_pkgs
          tar -xzf packages.tar.gz -C pyodide_pkgs
          unzip pyodide_pkgs/ngspice-44.2.zip
          ls libngspice.so

      - name: Generate PDK files
        run: |
          cd ${{ env.tools }}
          python3 -m venv ciel-venv
          ciel-venv/bin/python3 -m pip install --upgrade --no-cache-dir ciel
          export PDK_ROOT=${{ env.tools }}/ciel-pdks
          ciel-venv/bin/ciel ls-remote --pdk-family sky130
          # https://github.com/RTimothyEdwards/open_pdks/tree/0fe599b2afb6708d281543108caf8310912f54af
          ciel-venv/bin/ciel enable --pdk-family sky130 0fe599b2afb6708d281543108caf8310912f54af

      - name: Compile C++ sim with Emscripten + ngspice WASM
        run: |
          source ${{ env.git }}/emsdk/emsdk_env.sh
          em++ sim.cpp \
            -s SUPPORT_LONGJMP=wasm \
            -fwasm-exceptions \
            -fexceptions \
            -I ngspice/src/include/ngspice \
            -s MAIN_MODULE=1 \
            libngspice.so \
            -o sim.html

      - name: Set up Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Save commit hash
        id: gethash
        run: echo "hash=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Create web branch
        run: |
          git checkout -B web

      - name: Prepare files
        run: |
          mkdir -p docs
          mv sim.html docs/index.html
          mv sim.js docs/
          mv sim.wasm docs/
          git rm ngspice --force

      - name: Commit
        run: |
          if [[ -n "$(git status --porcelain)" ]]; then
            git add docs ngspice
            git commit -m "created web files from ${{ steps.gethash.outputs.hash }}"
            git push origin web --force
          else
            echo "No changes to commit."
          fi
